#include "fs.h"
#include "types.h"
#include "string.h"
#include "jos/string.h"
#include "common.h"
#define SECTSIZE 512
#define diskoffset 512*201
#define baseoffset 512*256+512
struct block tmpblock;
uint32_t initblock[512/4];
int
ide_read(uint32_t secno, void *dst, size_t nsecs);
int
ide_write(uint32_t secno, const void *src, size_t nsecs);

void file_init()
{
	printk("adsf\n");
	ide_read(diskoffset/512,bitmap,256);
	printk("adsf\n");
	ide_read(diskoffset/512+256,dir,1);
	printk("adsf\n");
	ide_read((diskoffset+baseoffset)/512,initblock,1);

}

void initfileread(unsigned char *loc,int cnt,int offset)
{
	int readserial=offset/512;
	int readloc=readserial*512;
	int startloc,neednum;
	while(cnt>0)
	{
		ide_read((diskoffset+baseoffset)/512+initblock[readserial],tmpblock.data,1);
		startloc=offset-readloc;
		if(cnt>=512-startloc)
		{
			cnt=cnt-512+startloc;
			neednum=512-startloc;
		}
		else
		{
			neednum=cnt-startloc;
			cnt=0;
		}
		memcpy(loc,&tmpblock.data[startloc],neednum);
		loc+=neednum;
		readloc+=SECTSIZE;
		offset=readloc;
		readserial++;
	}
}

void filefind(struct FCB *dest,char *openname)
{
	int i;
	for(i=0;i<16;i++)
		if(strcmp(dir[i].filename,openname)==0)break;
	if(i==16){printk("FAIL\n");return;}
	dest->size=dir[i].file_size;
	ide_read((diskoffset+baseoffset)/512+dir[i].inode_offset,dest->infoblock,1);
	
}

void fileread(unsigned char* loc,int cnt,int offset,struct FCB*dest)
{
	dest->pointer+=cnt;
	if(dest->pointer>dest->size) dest->pointer=dest->size;
	int readserial=offset/512;
	int readloc=readserial*512;
	int startloc,neednum;
	while(cnt>0)
	{
		ide_read((diskoffset+baseoffset)/512+dest->infoblock[readserial],tmpblock.data,1);
		startloc=offset-readloc;
		if(cnt>=512-startloc)
		{
			cnt=cnt-512+startloc;
			neednum=512-startloc;
		}
		else
		{
			neednum=cnt-startloc;	
			cnt=0;
		}
		memcpy(loc,&tmpblock.data[startloc],neednum);
		loc+=neednum;
		readloc+=SECTSIZE;
		offset=readloc;
		readserial++;
	}
}

void filewrite(unsigned char* loc,int cnt,int offset,struct FCB *dest)
{
	dest->pointer=dest->pointer+cnt;
	if(dest->pointer>dest->size)dest->pointer=dest->size;
	int readserial=offset/512;
	int readloc=readserial*512;
	int startloc,neednum;
	while(cnt>0)
	{
		ide_read((diskoffset+baseoffset)/512+dest->infoblock[readserial],tmpblock.data,1);
		startloc=offset-readloc;
		if(cnt>=512-startloc)
		{
			cnt=cnt-512+startloc;
			neednum=512-startloc;
		}
		else
		{
			neednum=cnt-startloc;
			cnt=0;
		}
		memcpy(&tmpblock.data[startloc],loc,neednum);
		ide_write((diskoffset+baseoffset)/512+dest->infoblock[readserial],tmpblock.data,1);
		loc+=neednum;
		readloc+=SECTSIZE;
		offset=readloc;
		readserial++;
	}
}
